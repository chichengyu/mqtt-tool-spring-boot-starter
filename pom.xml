<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.chichengyu</groupId>
    <artifactId>mqtt-tool-spring-boot-starter</artifactId>
    <version>1.1.0</version>
    <packaging>jar</packaging>
    <name>mqtt-tool-spring-boot-starter</name>
    <description>基于mqtt原生依赖封装的工具</description>
    <url>https://github.com/chichengyu/mqtt-tool-spring-boot-starter</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <spring-boot.version>2.7.0</spring-boot.version>
    </properties>

    <dependencies>
        <!-- Spring Boot Starter 基础依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-expression</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- mqtt -->
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2-extension</artifactId>
            <version>2.0.18.android</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>chichengyu</name>
            <email>875267425@qq.com</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:chichengyu/mqtt-tool-spring-boot-starter.git</connection>
        <developerConnection>scm:git:git@github.com:chichengyu/mqtt-tool-spring-boot-starter.git</developerConnection>
        <url>git@github.com:chichengyu/mqtt-tool-spring-boot-starter.git</url>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <!--
        gpg公钥上传失败，可手动上传 ，地址：https://keys.openpgp.org/，
        1.安装gpg-win4之后，打开 Kleopatra
        2.找到之前生成公钥时的名称与邮箱，看看有没有认证，没有认证就选中，点击上面认证
        3.认证完成后，选择右键导出，然后打开 https://keys.openpgp.org/ ，点击upload进行上传
        4.上传完成后，搜索栏，输入生成公钥时的邮箱，进行验证是否上传
    -->

    <!-- 发布 ：mvn clean install deploy -P release
    1.执行命令会生成 mqtt-tool-spring-boot-starter-1.1.0.jar.asc/mqtt-tool-spring-boot-starter-1.1.0.pom.asc/mqtt-tool-spring-boot-starter-1.1.0-javadoc.jar.asc/mqtt-tool-spring-boot-starter-1.1.0-sources.jar.asc 签名文件
    2.win打开PowerShell执行命令生成md5与sha1文件
        Get-FileHash -Algorithm MD5 .\mqtt-tool-spring-boot-starter-1.1.0.pom | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0.pom.md5
        Get-FileHash -Algorithm SHA1 .\mqtt-tool-spring-boot-starter-1.1.0.pom | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0.pom.sha1

        Get-FileHash -Algorithm MD5 .\mqtt-tool-spring-boot-starter-1.1.0.jar | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0.jar.md5
        Get-FileHash -Algorithm SHA1 .\mqtt-tool-spring-boot-starter-1.1.0.jar | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0.jar.sha1

        Get-FileHash -Algorithm MD5 .\mqtt-tool-spring-boot-starter-1.1.0-javadoc.jar | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0-javadoc.jar.md5
        Get-FileHash -Algorithm SHA1 .\mqtt-tool-spring-boot-starter-1.1.0-javadoc.jar | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0-javadoc.jar.sha1

        Get-FileHash -Algorithm MD5 .\mqtt-tool-spring-boot-starter-1.1.0-sources.jar | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0-sources.jar.md5
        Get-FileHash -Algorithm SHA1 .\mqtt-tool-spring-boot-starter-1.1.0-sources.jar | Select-Object -ExpandProperty Hash | Out-File -Encoding ASCII .\mqtt-tool-spring-boot-starter-1.1.0-sources.jar.sha1
    3.按照命名空间格式创建目录 比如我命名空间是io.github.chichengyu，完整目录结构为：D:\1111\io\github\chichengyu\mqtt-tool-spring-boot-starter\1.1.0，再把步骤1生成的target文件复制过来
    4.将整个文件生成 mqtt-tool-spring-boot-starter.zip包
    5.登陆 https://central.sonatype.com/publishing 捆绑上传：名称格式：io.github.chichengyu:mqtt-tool-spring-boot-starter:1.1.0，然后上传mqtt-tool-spring-boot-starter.zip
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <!--<show>private</show>-->
                    <nohelp>true</nohelp>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <!-- TODO 临时解决不规范的javadoc生成报错,后面要规范化后把这行去掉 -->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <!-- GPG签名插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>